@model PaginatedList<CouriersManagementDb.Models.Courier>


@{
    ViewData["Title"] = "Courier Index";
    var nameSortParam = ViewData["NameSortParam"] as string ?? "name_asc";
    var emailSortParam = ViewData["EmailSortParam"] as string ?? "email_asc";
}

<h1>Couriers</h1>

<form asp-action="Index" method="get" class="form-inline">
    <div class="form-group">
        <input type="text" name="searchString" class="form-control" placeholder="Search by name, email, or base location" value="@ViewData["CurrentFilter"]" />
        <select name="sortOrder" class="form-control">
            <option value="NameAsc">Name Ascending</option>
            <option value="name_desc">Name Descending</option>
            <option value="email_asc">Email Ascending</option>
            <option value="email_asc">Email Descending</option>
            <option value="baseLocation_asc">Base Location Ascending</option>
            <option value="baseLocation_desc">Base Location Descending</option>
        </select>
        <button type="submit" class="btn btn-primary">Search and Sort</button>
    </div>
</form>


<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@nameSortParam">First Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@nameSortParam">Last Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@emailSortParam">Email</a>
            </th>
            <th>
                Phone Number 
            </th>
            <th>
                BaseLocation
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>    
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BaseLocation)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.CourierID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.CourierID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.CourierID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["NameSortParm"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["NameSortParm"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>